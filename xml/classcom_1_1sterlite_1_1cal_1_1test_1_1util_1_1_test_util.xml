<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util" kind="class" language="Java" prot="public">
    <compoundname>com::sterlite::cal::test::util::TestUtil</compoundname>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a841032652f5708eca873a2755f0eaf9b" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>final Logger com.sterlite.cal.test.util.TestUtil.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.logger</qualifiedname>
        <initializer>= Logger.getLogger(TestUtil.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="31" column="29" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1ae21529207e67de0aa249f46f6a5d79fa" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String com.sterlite.cal.test.util.TestUtil.TEMPLATE</definition>
        <argsstring></argsstring>
        <name>TEMPLATE</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.TEMPLATE</qualifiedname>
        <initializer>= &quot;localTemplate&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="32" column="29" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a73fb9e74af00522c59b8305d68df4c57" prot="private" static="yes" mutable="no">
        <type>ScriptEngineManager</type>
        <definition>ScriptEngineManager com.sterlite.cal.test.util.TestUtil.scriptEngineManager</definition>
        <argsstring></argsstring>
        <name>scriptEngineManager</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.scriptEngineManager</qualifiedname>
        <initializer>= new ScriptEngineManager()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="33" column="36" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a6738920db9a8d38004ff8773c7d9ef0e" prot="private" static="yes" mutable="no">
        <type>ScriptEngine</type>
        <definition>ScriptEngine com.sterlite.cal.test.util.TestUtil.nashornScriptEngine</definition>
        <argsstring></argsstring>
        <name>nashornScriptEngine</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.nashornScriptEngine</qualifiedname>
        <initializer>= scriptEngineManager.getEngineByName(&quot;nashorn&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="34" column="29" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a9ca0aca21af3872e494fa928b620da3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ScriptEngine</type>
        <definition>static ScriptEngine com.sterlite.cal.test.util.TestUtil.getNashornScriptEngine</definition>
        <argsstring>()</argsstring>
        <name>getNashornScriptEngine</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.getNashornScriptEngine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="36" column="28" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1aede3896ec0602a2326ec1b65de04e090" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String com.sterlite.cal.test.util.TestUtil.modifyRequestJsonByReplacingRequestData</definition>
        <argsstring>(String requestJson, Map&lt; String, String &gt; requestData)</argsstring>
        <name>modifyRequestJsonByReplacingRequestData</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.modifyRequestJsonByReplacingRequestData</qualifiedname>
        <param>
          <type>String</type>
          <declname>requestJson</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>requestData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a JSON string. This method will accept JSON string of the API and data to be placed in the JSON. Method will modify JSON string and returns a modified JSON string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>requestJson</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON for the API </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requestData</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be replaced in JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>modified JSON string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="49" column="22" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="49" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1abba119139411a8f13a7b6df4a05feccb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String com.sterlite.cal.test.util.TestUtil.modifyRequestURIByReplacingURIData</definition>
        <argsstring>(String requestURI, Map&lt; String, String &gt; requestData)</argsstring>
        <name>modifyRequestURIByReplacingURIData</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.modifyRequestURIByReplacingURIData</qualifiedname>
        <param>
          <type>String</type>
          <declname>requestURI</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>requestData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string. This method will accept URI of the API in form of string and data to be placed in the URI string. Method will modify URI string and returns a modified URI string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>requestURI</parametername>
</parameternamelist>
<parameterdescription>
<para>URI for the API </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requestData</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be replaced in URI </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>modified URI string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="80" column="23" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="80" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1afe1c97ebb6d3526998c618b58a674f7b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; String, String &gt;</type>
        <definition>static Map&lt; String, String &gt; com.sterlite.cal.test.util.TestUtil.getValuesFromResponse</definition>
        <argsstring>(String responseString, List&lt; String &gt; $separatedKeys)</argsstring>
        <name>getValuesFromResponse</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.getValuesFromResponse</qualifiedname>
        <param>
          <type>String</type>
          <declname>responseString</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>$separatedKeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a Map&lt;String, String&gt;. This method will accept response JSON string and data to be placed in the JSON string. Method will fetch values from response JSON string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>responseString</parametername>
</parameternamelist>
<parameterdescription>
<para>response JSON String </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$separatedKeys</parametername>
</parameternamelist>
<parameterdescription>
<para>list of fields to be fetched from response string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Map&lt;String, String&gt; of response field as key with its value as value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="110" column="20" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="110" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1ab14c3f9384d44cdb372a6bd12ad114d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String com.sterlite.cal.test.util.TestUtil.modifyExpression</definition>
        <argsstring>(String expression, Map&lt; String, String &gt; $keyValueMap)</argsstring>
        <name>modifyExpression</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.modifyExpression</qualifiedname>
        <param>
          <type>String</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>$keyValueMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a String. This method will accept test expression as a string and map of fields with their values. This data of map will be used to replace the content of the test expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>testExpression JSON String </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$keyValueMap</parametername>
</parameternamelist>
<parameterdescription>
<para>map of fields with their values used to replace test expression content </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String modified test expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="141" column="23" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="141" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a70db6d7d7a33a9db850e811040e8fde1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; String &gt;</type>
        <definition>static List&lt; String &gt; com.sterlite.cal.test.util.TestUtil.getKeysFromTestExpression</definition>
        <argsstring>(String expression)</argsstring>
        <name>getKeysFromTestExpression</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.getKeysFromTestExpression</qualifiedname>
        <param>
          <type>String</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a List&lt;String&gt;. This method will accept test expression as a string Method will extract keys from given test expression returns a list of such keys.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>testExpression JSON String </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of keys from given test expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="161" column="21" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a7062ca2af4f7c9d5a0fdbe43800ad330" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean com.sterlite.cal.test.util.TestUtil.executeTestExpression</definition>
        <argsstring>(String response, String testExpression)</argsstring>
        <name>executeTestExpression</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.executeTestExpression</qualifiedname>
        <param>
          <type>String</type>
          <declname>response</declname>
        </param>
        <param>
          <type>String</type>
          <declname>testExpression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a boolean value to indicate evaluation of test expression. This method will accept response as a string and test expression as a string. Method will evaluate the given test expression on given response using nashorn java script engine and returns result as a boolean value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>response JSON String </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>testExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON String </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean value as a result of evaluation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="183" column="23" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a88f93ed328b64633d3ff09a52e9082c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void com.sterlite.cal.test.util.TestUtil.storeResponseAttributeValues</definition>
        <argsstring>(String responseString, String responseAttribute)</argsstring>
        <name>storeResponseAttributeValues</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.storeResponseAttributeValues</qualifiedname>
        <param>
          <type>String</type>
          <declname>responseString</declname>
        </param>
        <param>
          <type>String</type>
          <declname>responseAttribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method will accept response string and attributes in form of key value pair # separated. Method will fetch the values mentioned in the attribute list from response string. And store it into a Map. So that these values can be used for further test cases.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>responseString</parametername>
</parameternamelist>
<parameterdescription>
<para>response JSON String </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responseAttribute</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON String </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="205" column="20" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="205" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1aa79640c39a527a2311ae47eacfe1ed76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; String, String &gt;</type>
        <definition>static Map&lt; String, String &gt; com.sterlite.cal.test.util.TestUtil.getMapToReplaceContent</definition>
        <argsstring>(Map&lt; String, String &gt; requestData)</argsstring>
        <name>getMapToReplaceContent</name>
        <qualifiedname>com.sterlite.cal.test.util.TestUtil.getMapToReplaceContent</qualifiedname>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>requestData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method will accept map of request data. Method will merge common master data, previous results of test cases and request data into single map.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>requestData</parametername>
</parameternamelist>
<parameterdescription>
<para>map of fields with their values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="239" column="19" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="239" bodyend="259"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" line="29" column="7" bodyfile="repository/cal-testing/src/test/java/com/sterlite/cal/test/util/TestUtil.java" bodystart="29" bodyend="260"/>
    <listofallmembers>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a7062ca2af4f7c9d5a0fdbe43800ad330" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>executeTestExpression</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a70db6d7d7a33a9db850e811040e8fde1" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>getKeysFromTestExpression</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1aa79640c39a527a2311ae47eacfe1ed76" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>getMapToReplaceContent</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a9ca0aca21af3872e494fa928b620da3a" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>getNashornScriptEngine</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1afe1c97ebb6d3526998c618b58a674f7b" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>getValuesFromResponse</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a841032652f5708eca873a2755f0eaf9b" prot="private" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>logger</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1ab14c3f9384d44cdb372a6bd12ad114d9" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>modifyExpression</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1aede3896ec0602a2326ec1b65de04e090" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>modifyRequestJsonByReplacingRequestData</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1abba119139411a8f13a7b6df4a05feccb" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>modifyRequestURIByReplacingURIData</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a6738920db9a8d38004ff8773c7d9ef0e" prot="private" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>nashornScriptEngine</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a73fb9e74af00522c59b8305d68df4c57" prot="private" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>scriptEngineManager</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1a88f93ed328b64633d3ff09a52e9082c5" prot="public" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>storeResponseAttributeValues</name></member>
      <member refid="classcom_1_1sterlite_1_1cal_1_1test_1_1util_1_1_test_util_1ae21529207e67de0aa249f46f6a5d79fa" prot="private" virt="non-virtual"><scope>com::sterlite::cal::test::util::TestUtil</scope><name>TEMPLATE</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
