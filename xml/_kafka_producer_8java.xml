<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="_kafka_producer_8java" kind="file" language="Java">
    <compoundname>KafkaProducer.java</compoundname>
    <innerclass refid="classcom_1_1sterlite_1_1cal_1_1config_1_1kafka_1_1_kafka_producer" prot="public">com::sterlite::cal::config::kafka::KafkaProducer</innerclass>
    <innernamespace refid="namespacecom_1_1sterlite_1_1cal_1_1config_1_1kafka">com::sterlite::cal::config::kafka</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.sterlite.cal.config.kafka;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.TimeUnit;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.slf4j.Logger;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.slf4j.LoggerFactory;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.beans.factory.annotation.Autowired;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.kafka.core.KafkaTemplate;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.kafka.support.SendResult;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.stereotype.Component;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.util.concurrent.ListenableFuture;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">@Component</highlight></codeline>
<codeline lineno="15"><highlight class="normal">@ConditionalOnProperty(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;kafka.integration.enable&quot;</highlight><highlight class="normal">,<sp/>havingValue<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16" refid="classcom_1_1sterlite_1_1cal_1_1config_1_1kafka_1_1_kafka_producer" refkind="compound"><highlight class="normal">public<sp/>class<sp/><ref refid="classcom_1_1sterlite_1_1cal_1_1config_1_1kafka_1_1_kafka_producer" kindref="compound">KafkaProducer</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/>MODULE_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TKAL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/>CLASS_NAME<sp/>=<sp/><ref refid="classcom_1_1sterlite_1_1cal_1_1config_1_1kafka_1_1_kafka_producer" kindref="compound">KafkaProducer</ref>.class.getSimpleName();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Logger<sp/>LOGGER<sp/>=<sp/>LoggerFactory.getLogger(<ref refid="classcom_1_1sterlite_1_1cal_1_1config_1_1kafka_1_1_kafka_producer" kindref="compound">KafkaProducer</ref>.class);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>@Autowired</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>KafkaTemplate&lt;String,<sp/>String&gt;<sp/>kafkaTemplate;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>send(String<sp/>topic,<sp/>String<sp/>payload,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kafkaMaxResponseWait)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/>METHOD_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;send&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;[IN]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isSent;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LOGGER.isInfoEnabled())</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;sending<sp/>payload=&apos;{}&apos;<sp/>to<sp/>topic=&apos;{}&apos;&quot;</highlight><highlight class="normal">,<sp/>payload,<sp/>topic);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ListenableFuture&lt;SendResult&lt;String,<sp/>String&gt;&gt;<sp/>future<sp/>=<sp/>this.kafkaTemplate.send(topic,<sp/>payload);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SendResult&lt;String,<sp/>String&gt;<sp/>result<sp/>=<sp/>future.get(kafkaMaxResponseWait,<sp/>TimeUnit.SECONDS);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Sent<sp/>message={}<sp/>with<sp/>offset={}&quot;</highlight><highlight class="normal">,<sp/>payload,<sp/>result.getRecordMetadata().offset());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.error(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>send<sp/>message={}<sp/>due<sp/>to<sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>payload,<sp/>e);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;check<sp/>response<sp/>flag<sp/>from<sp/>kafka<sp/>system<sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>isSent);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isSent)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;inside<sp/>failed<sp/>condition<sp/>for<sp/>kafka<sp/>{}<sp/>&gt;&gt;<sp/>file<sp/>writing<sp/>started&quot;</highlight><highlight class="normal">,<sp/>isSent);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;inside<sp/>failed<sp/>condition<sp/>for<sp/>kafka<sp/>{}<sp/>&gt;&gt;<sp/>file<sp/>writing<sp/>ended&quot;</highlight><highlight class="normal">,<sp/>isSent);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.error(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>write<sp/>inside<sp/>file={}<sp/>due<sp/>to<sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>payload,<sp/>e);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;final<sp/>response<sp/>from<sp/>kafka<sp/>topic<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>isSent);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(MODULE_NAME,<sp/>CLASS_NAME,<sp/>METHOD_NAME,<sp/></highlight><highlight class="stringliteral">&quot;[EXIT]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSent;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="repository/core/src/main/java/com/sterlite/cal/config/kafka/KafkaProducer.java"/>
  </compounddef>
</doxygen>
