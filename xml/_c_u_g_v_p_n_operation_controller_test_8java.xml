<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="_c_u_g_v_p_n_operation_controller_test_8java" kind="file" language="Java">
    <compoundname>CUGVPNOperationControllerTest.java</compoundname>
    <innerclass refid="classcom_1_1sterlite_1_1cal_1_1cugvpn_1_1controller_1_1_c_u_g_v_p_n_operation_controller_test" prot="public">com::sterlite::cal::cugvpn::controller::CUGVPNOperationControllerTest</innerclass>
    <innernamespace refid="namespacecom_1_1sterlite_1_1cal_1_1cugvpn_1_1controller">com::sterlite::cal::cugvpn::controller</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.sterlite.cal.cugvpn.controller;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>org.junit.Assert.assertEquals;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>org.junit.Assert.assertNotNull;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>org.mockito.Mockito.when;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.IOException;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>javax.servlet.http.HttpServletRequest;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.Before;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.Test;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.runner.RunWith;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.mockito.InjectMocks;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.mockito.Mock;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.mockito.MockitoAnnotations;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.powermock.api.mockito.PowerMockito;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.powermock.core.classloader.annotations.PowerMockIgnore;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.powermock.core.classloader.annotations.PrepareForTest;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.powermock.modules.junit4.PowerMockRunner;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.powermock.modules.junit4.PowerMockRunnerDelegate;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.boot.test.context.SpringBootTest;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.boot.test.context.SpringBootTest.WebEnvironment;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.core.NamedThreadLocal;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.test.context.junit4.SpringRunner;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.test.util.ReflectionTestUtils;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.web.context.request.RequestAttributes;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.web.context.request.RequestContextHolder;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.springframework.web.context.request.ServletRequestAttributes;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.config.api.utility.APIConfigUtility;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.config.api.utility.CoreFactoryObject;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.base.constant.CoreStaticConstants;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.base.holder.APIConfigContextHolder;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.base.locale.LocaleTranslator;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.cache.CALCacheManagerImp;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.cache.CacheConstant;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.exception.SBIntegrationException;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.logger.ILogger;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.core.logger.Logger.LogType;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.sterlite.cal.cugvpn.service.manager.CUGVPNServiceManager;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">@RunWith(PowerMockRunner.class)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">@PowerMockRunnerDelegate(SpringRunner.class)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">@SpringBootTest(webEnvironment<sp/>=<sp/>WebEnvironment.MOCK)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">@PowerMockIgnore({<sp/></highlight><highlight class="stringliteral">&quot;javax.*.*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com.sun.*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;org.xml.*&quot;</highlight><highlight class="normal"><sp/>})</highlight></codeline>
<codeline lineno="47"><highlight class="normal">@PrepareForTest({<sp/>APIConfigContextHolder.class,<sp/>APIConfigUtility.class,<sp/>CALCacheManagerImp.class,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoreFactoryObject.class,<sp/>LocaleTranslator.class,<sp/>CacheConstant.class,<sp/>CoreStaticConstants.class,RequestContextHolder.class<sp/>})</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classcom_1_1sterlite_1_1cal_1_1cugvpn_1_1controller_1_1_c_u_g_v_p_n_operation_controller_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1sterlite_1_1cal_1_1cugvpn_1_1controller_1_1_c_u_g_v_p_n_operation_controller_test" kindref="compound">CUGVPNOperationControllerTest</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfacecom_1_1sterlite_1_1cal_1_1core_1_1logger_1_1_i_logger" kindref="compound">ILogger</ref><sp/>LOGGER<sp/>=<sp/><ref refid="interfacecom_1_1sterlite_1_1cal_1_1core_1_1logger_1_1_i_logger" kindref="compound">ILogger</ref>.getInstant(<ref refid="classcom_1_1sterlite_1_1cal_1_1cugvpn_1_1controller_1_1_c_u_g_v_p_n_operation_controller_test" kindref="compound">CUGVPNOperationControllerTest</ref>.class);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>@InjectMocks</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcom_1_1sterlite_1_1cal_1_1cugvpn_1_1controller_1_1_c_u_g_v_p_n_operation_controller" kindref="compound">CUGVPNOperationController</ref><sp/>cugVPNOperationController;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>@Mock<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcom_1_1sterlite_1_1cal_1_1cugvpn_1_1service_1_1manager_1_1_c_u_g_v_p_n_service_manager" kindref="compound">CUGVPNServiceManager</ref><sp/>cugVpnServiceManager;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>reqJsonString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\r\n<sp/><sp/>\&quot;ipAddress\&quot;:<sp/>\&quot;127.0.0.1\&quot;,\r\n<sp/><sp/>\&quot;referenceId\&quot;:<sp/>\&quot;3212113331\&quot;,\r\n<sp/><sp/>\&quot;source\&quot;:<sp/>\&quot;CRM\&quot;,\r\n<sp/><sp/>\&quot;tenantId\&quot;:<sp/>\&quot;0\&quot;,\r\n<sp/><sp/>\&quot;accountNumber\&quot;:<sp/>\&quot;AMI_COMMISSION_3\&quot;,\r\n<sp/><sp/>\&quot;username\&quot;:<sp/>\&quot;AMI_COMMISSION_3\&quot;,\r\n<sp/><sp/>\&quot;serviceInstanceStatus\&quot;:<sp/>\&quot;REGISTERED\&quot;,\r\n<sp/><sp/>\&quot;action\&quot;:<sp/>{\r\n<sp/><sp/><sp/><sp/>\&quot;sourceChannel\&quot;:<sp/>\&quot;CRM\&quot;\r\n<sp/><sp/>},\r\n<sp/><sp/>\&quot;billingAccountRef\&quot;:<sp/>{\r\n<sp/><sp/><sp/><sp/>\&quot;accountNumber\&quot;:<sp/>\&quot;ELITE0001645131\&quot;\r\n<sp/><sp/>},\r\n<sp/><sp/>\&quot;serviceAccountRef\&quot;:<sp/>{\r\n<sp/><sp/><sp/><sp/>\&quot;accountNumber\&quot;:<sp/>\&quot;ELITE0001645132\&quot;\r\n<sp/><sp/>},\r\n<sp/><sp/>\&quot;createDate\&quot;:<sp/>\&quot;2019-03-08<sp/>00:00:00\&quot;,\r\n<sp/><sp/>\&quot;businessHierarchy\&quot;:<sp/>\&quot;1~~IT_SERVICE##2~~CLOUD_SERVICES##3~~INFRASTRUCTURE_AS_A_SERVICE##4~~PUBLIC_CLOUD\&quot;,\r\n<sp/><sp/>\&quot;basicProduct\&quot;:<sp/>{\r\n<sp/><sp/><sp/><sp/>\&quot;name\&quot;:<sp/>\&quot;Public<sp/>Cloud<sp/>Light<sp/>Applications\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;overridden\&quot;:<sp/>\&quot;Y\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;pricingDetail\&quot;:<sp/>[\r\n<sp/><sp/><sp/><sp/><sp/><sp/>{\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;chargeName\&quot;:<sp/>\&quot;Public<sp/>Cloud<sp/>Light<sp/>Applications_OTC\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;overridden\&quot;:<sp/>\&quot;Y\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;chargeType\&quot;:<sp/>\&quot;NONE_RECURRING\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;price\&quot;:<sp/>15000,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;quantity\&quot;:<sp/>1,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;proration\&quot;:<sp/>true\r\n<sp/><sp/><sp/><sp/><sp/><sp/>},\r\n<sp/><sp/><sp/><sp/><sp/><sp/>{\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;chargeName\&quot;:<sp/>\&quot;Public<sp/>Cloud<sp/>Light<sp/>Applications_MRC\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;chargeType\&quot;:<sp/>\&quot;RECURRING\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;overridden\&quot;:<sp/>\&quot;Y\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;price\&quot;:<sp/>1655000,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;quantity\&quot;:<sp/>1,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;proration\&quot;:<sp/>true\r\n<sp/><sp/><sp/><sp/><sp/><sp/>}\r\n<sp/><sp/><sp/><sp/>],\r\n<sp/><sp/><sp/><sp/>\&quot;additionalParameters\&quot;:<sp/>[\r\n<sp/><sp/><sp/><sp/><sp/><sp/>{\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;name\&quot;:<sp/>\&quot;STR_ATTRIBUTE_13\&quot;,\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;value\&quot;:<sp/>\&quot;Jatiluhur<sp/>Data<sp/>Center\&quot;\r\n<sp/><sp/><sp/><sp/><sp/><sp/>}\r\n<sp/><sp/><sp/><sp/>]\r\n<sp/><sp/>}\r\n}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>@Before</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUp()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MockitoAnnotations.initMocks(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PowerMockito.mockStatic(<ref refid="classcom_1_1sterlite_1_1cal_1_1core_1_1base_1_1holder_1_1_a_p_i_config_context_holder" kindref="compound">APIConfigContextHolder</ref>.class);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPostOperationSuccessTest()<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>IOException,<sp/><ref refid="classcom_1_1sterlite_1_1cal_1_1core_1_1exception_1_1_s_b_integration_exception" kindref="compound">SBIntegrationException</ref><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/>strMethodName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;doPostOperationSuccessTest&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.startLog(strMethodName,<sp/><ref refid="enumcom_1_1sterlite_1_1cal_1_1core_1_1logger_1_1_logger_1_1_log_type" kindref="compound">LogType</ref>.PROCESS);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>expectedResponseString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;referenceId\\\&quot;:<sp/>\\\&quot;1234\\\&quot;,\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;responseCode\\\&quot;:<sp/>\\\&quot;0\\\&quot;,\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;responseMessage\\\&quot;:<sp/>null,\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;responseObject\\\&quot;:<sp/>{\\r\\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\\&quot;token\\\&quot;:<sp/>\\\&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhbWlzaGEiLCJjcmVhdGVkIjoxNTY0NzUxODk3ODU2LCJpcF9hZGRyZXNzIjoiMTAuMTIxLjI4LjkyIiwiZXhwIjoxNTY0NzU1NDk3LCJ1c2VyaWQiOiIwMDEifQ.Oil7mP50cL_8m0lfl8ON9fOCh2I1gvfug5ad18rnsppFyGYG-KIeJckcLBkQ99GKb0DL8QGfYfd8qcaBCkDBhg\\\&quot;,\\r\\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\\&quot;expiryDate\\\&quot;:<sp/>\\\&quot;9999-08-02<sp/>18:48:22\\\&quot;,\\r\\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\\&quot;userName\\\&quot;:<sp/>\\\&quot;amisha\\\&quot;\\r\\n<sp/><sp/><sp/><sp/>},\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;token\\\&quot;:<sp/>null,\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;expiryDate\\\&quot;:<sp/>null,\\r\\n<sp/><sp/><sp/><sp/>\\\&quot;tenentId\\\&quot;:<sp/>null\\r\\n}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when(cugVpnServiceManager.doPost(reqJsonString)).thenReturn(expectedResponseString);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>actualResponseString<sp/>=<sp/>cugVPNOperationController.doPost(reqJsonString);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(expectedResponseString,<sp/>actualResponseString);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.endLog(strMethodName,<sp/><ref refid="enumcom_1_1sterlite_1_1cal_1_1core_1_1logger_1_1_logger_1_1_log_type" kindref="compound">LogType</ref>.PROCESS);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="repository/cug-vpn-service/src/test/java/com/sterlite/cal/cugvpn/controller/CUGVPNOperationControllerTest.java"/>
  </compounddef>
</doxygen>
